'use strict';

var expect = require('chai').expect;
var JobModel = require('../models/job');
var mongoose = require('mongoose');
var Promise = require('bluebird');

function resetJobs() {
	return new Promise( function( resolve, reject) {
		mongoose.connection.collections['jobs'].drop(resolve, reject);
	});
} 

//var connectDB = Promise.promisify(mongoose.connect, mongoose);

describe('get jobs', function() {
	it('should never be empty since jobs are seeded', function(done) {
//		connectDB('mongodb://localhost/jobfinder')
		mongoose.connect('mongodb://localhost/jobfinder')
		.then(resetJobs)
		.then(JobModel.seedJobs)
		.then(function(){
			mongoose.model('Job').find({}).exec(function(error, jobsList) {
				console.log('jobs-data-spec.js '+ jobsList.length);
				expect(jobsList.length).to.be.at.least(1);
				done();
			});
		});
	});
}); 